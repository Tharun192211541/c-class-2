
#include <bits/stdc++.h>
using namespace std;
int compositeCount(int arr[], int n, int* sum)
{
	int max_val = *max_element(arr, arr + n);
	vector<bool> prime(max_val + 1, true);
	prime[0] = true;
	prime[1] = true;
	for (int p = 2; p * p <= max_val; p++) {

		if (prime[p] == true) {
			for (int i = p * 2; i <= max_val; i += p)
				prime[i] = false;
		}
}
	int count = 0;
	for (int i = 0; i < n; i++)
		if (!prime[arr[i]]) {
			count++;
			*sum = *sum + arr[i];
		}

	return count;
}

int main()
{

	int arr[] = { 1, 2, 3, 4, 5, 6, 7 };
	int n = sizeof(arr) / sizeof(arr[0]);
	int sum = 0;

	cout << "Count of Composite Numbers = "
		<< compositeCount(arr, n, &sum);

	cout << "\nSum of Composite Numbers = " << sum;

	return 0;
}
